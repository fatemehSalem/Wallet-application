#version: "3.8"
#services:
#    consul:
#        image: consul
#        ports:
#            - "8500:8500"
#            - "8600:8600/udp"
#        container_name: consul
#        command: ["agent", "-server", "-ui", "-node=server-1", "-bootstrap-expect=1", "-client=0.0.0.0"]
##
##    config:
##        build: ./config
##        ports:
##            - "8080"
##        container_name: config-service
##        restart: on-failure
##        depends_on:
##            - consul
##        env_file:
##            - .env.development
##            - .env.stage
###            - .env.production
##
##    gateway:
##        build: ./gateway
##        ports:
##            - "8080"
##        container_name: gateway-service
##        restart: on-failure
##        depends_on:
##            - consul
##        env_file:
##            - .env.development
###            - .env.stage
###            - .env.production
##
##    order:
##        build: ./order
##        ports:
##            - "8080"
##        container_name: order-service
##        restart: on-failure
##        depends_on:
##            - consul
##        env_file:
##            - .env.development
###            - .env.stage
###            - .env.production
##
##    trader:
##        build: ./trader
##        ports:
##            - "8080"
##        container_name: trader-service
##        restart: on-failure
##        depends_on:
##            - consul
##        env_file:
##            - .env.development
###            - .env.stage
###            - .env.production
##
#    account:
#        build: ./account
#        ports:
#            - "8080"
#        container_name: account-service
#        restart: on-failure
#        depends_on:
#            - consul
#            - postgres
#        env_file:
#            - .env.development
##            - .env.stage
##            - .env.production
##
##    otp:
##        build: ./otp
##        ports:
##            - "8080"
##        container_name: otp-service
##        restart: on-failure
##        depends_on:
##            - consul
##        env_file:
##            - .env.development
###            - .env.stage
###            - .env.production
#
#    #
#    #    auth:
#    #        build: ./auth
#    #        ports:
#    #            - "8080"
#    #        container_name: auth-service
#    #        restart: on-failure
#    #        depends_on:
#    #            - consul
#    #        env_file:
#    #             - .env.development
#    ##            - .env.stage
#    ##            - .env.production
#
#    postgres:
#        container_name: postgres
#        image: postgres
#        environment:
#            POSTGRES_USER: hepcardApp
#            POSTGRES_PASSWORD: passwordHEPCARDapp
#            PGDATA: /data/postgres
#        volumes:
#            - postgres:/data/postgres
#        ports:
#            - "5432:5432"
#        restart: unless-stopped
#
#    pgadmin:
#        container_name: pgadmin
#        image: dpage/pgadmin4
#        environment:
#            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#            PGADMIN_CONFIG_SERVER_MODE: 'False'
#        volumes:
#            - pgadmin:/var/lib/pgadmin
#        ports:
#            - "5050:80"
#        restart: unless-stopped
#
#networks:
#    default:
#        name: spring-cloud-microservices
#
#volumes:
#    postgres:
#    pgadmin:
#
##pgAdminPasswprd: HepC@rd@123321@
version: "3.8"
services:
  db:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: raj@nola.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
